-------------------------------CREATE TABLE-------------------------------
CREATE TABLE SVZ98608.Person(
   pkPerson BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   lastName VARCHAR(255) NOT NULL,
   bithday DATE NOT NULL,
   passedAway DATE,
   maritalStatus INTEGER NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkBirthCountry SMALLINT NOT NULL,
   PRIMARY KEY(pkPerson)
);

CREATE TABLE SVZ98608.JuridicalPerson(
   pkJuridicalPerson BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   socialReason VARCHAR(255) NOT NULL,
   openedDate DATE NOT NULL,
   companyType INTEGER NOT NULL DEFAULT 1,
   legalStructure INTEGER NOT NULL DEFAULT 1,
   fkOriginCountry SMALLINT,
   PRIMARY KEY(pkJuridicalPerson)
);

CREATE TABLE SVZ98608.IdentificationDocument(
   pkIdentificationDocument BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type VARCHAR(255) NOT NULL,
   value VARCHAR(255) NOT NULL,
   issueDate DATE,
   expirationDate DATE,
   status INTEGER NOT NULL DEFAULT 0,
   fkPerson BIGINT,
   fkJuridicalPerson BIGINT,
   fkState SMALLINT,
   fkCountry SMALLINT,
   PRIMARY KEY(pkIdentificationDocument)
);

CREATE TABLE SVZ98608.User(
   pkUser BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   username VARCHAR(255) NOT NULL,
   password VARCHAR(255) NOT NULL,
   dateOfCreatingAccount VARCHAR(26) NOT NULL,
   dateOfFinishingAccount VARCHAR(26),
   facebookAccount VARCHAR(255),
   useTwoStepsVerification BOOLEAN NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkPerson BIGINT,
   fkJuridicalPerson BIGINT,
   fkEmployee BIGINT,
   fkCounter BIGINT,
   fkBalance BIGINT NOT NULL,
   PRIMARY KEY(pkUser)
);

CREATE TABLE SVZ98608.Contact(
   pkContact BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type VARCHAR(255) NOT NULL,
   value VARCHAR(255) NOT NULL,
   expirationDate DATE,
   status INTEGER NOT NULL DEFAULT 0,
   fkPerson BIGINT,
   fkJuridicalPerson BIGINT,
   PRIMARY KEY(pkContact)
);

CREATE TABLE SVZ98608.Address(
   pkAddress BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL DEFAULT 1,
   street VARCHAR(255) NOT NULL,
   number VARCHAR(255) NOT NULL,
   neighborhood VARCHAR(255) NOT NULL,
   zipCode VARCHAR(255),
   status INTEGER NOT NULL DEFAULT 0,
   fkPerson BIGINT,
   fkJuridicalPerson BIGINT,
   fkCity BIGINT NOT NULL,
   PRIMARY KEY(pkAddress)
);

CREATE TABLE SVZ98608.State(
   pkState SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   abbreviation VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT NOT NULL,
   PRIMARY KEY(pkState)
);

CREATE TABLE SVZ98608.Country(
   pkCountry SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   abbreviation VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   timeZone INTEGER,
   fkLanguage SMALLINT NOT NULL,
   PRIMARY KEY(pkCountry)
);

CREATE TABLE SVZ98608.City(
   pkCity BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   abbreviation VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkState SMALLINT NOT NULL,
   fkDepartmentOfFinance SMALLINT,
   fkBalance BIGINT,
   PRIMARY KEY(pkCity)
);

CREATE TABLE SVZ98608.Employee(
   pkEmployee BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   profession VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkPerson BIGINT NOT NULL,
   fkJuridicalPerson BIGINT NOT NULL,
   PRIMARY KEY(pkEmployee)
);

CREATE TABLE SVZ98608.EmployeeResponsibility(
   pkEmployeeResponsibility BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   position VARCHAR(255) NOT NULL,
   salary REAL NOT NULL,
   commission REAL NOT NULL,
   beginning VARCHAR(26) NOT NULL,
   end VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkEmployee BIGINT NOT NULL,
   PRIMARY KEY(pkEmployeeResponsibility)
);

CREATE TABLE SVZ98608.Appointment(
   pkAppointment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   number VARCHAR(255) NOT NULL,
   cost REAL NOT NULL,
   discount REAL NOT NULL DEFAULT 0,
   date DATE NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkAppointment)
);

CREATE TABLE SVZ98608.Service(
   pkService BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   description VARCHAR(5000) NOT NULL,
   cost REAL NOT NULL,
   time INTEGER NOT NULL,
   discountRate REAL NOT NULL DEFAULT 0,
   cancelRate REAL NOT NULL DEFAULT 0,
   withContract BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL DEFAULT 0,
   fkCurrency BIGINT NOT NULL,
   fkServiceCategory BIGINT NOT NULL,
   fkEmployeeResponsibility BIGINT NOT NULL,
   fkAddress BIGINT,
   fkJuridicalPerson BIGINT,
   PRIMARY KEY(pkService)
);

CREATE TABLE SVZ98608.ServiceAppointment(
   pkServiceAppointment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   beginning VARCHAR(26),
   end VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkService BIGINT NOT NULL,
   fkAppointment BIGINT NOT NULL,
   PRIMARY KEY(pkServiceAppointment)
);

CREATE TABLE SVZ98608.ServiceCategory(
   pkServiceCategory BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCategory BIGINT,
   PRIMARY KEY(pkServiceCategory)
);

CREATE TABLE SVZ98608.Category(
   pkCategory BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   image VARCHAR(255) NOT NULL,
   code VARCHAR(255),
   status INTEGER NOT NULL DEFAULT 0,
   fkCategory BIGINT,
   fkCountry SMALLINT,
   PRIMARY KEY(pkCategory)
);

CREATE TABLE SVZ98608.ServiceUnavailable(
   pkServiceUnavailable BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   beginning VARCHAR(26) NOT NULL DEFAULT CURRENT_TIMESTAMP,
   end VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkService BIGINT NOT NULL,
   PRIMARY KEY(pkServiceUnavailable)
);

CREATE TABLE SVZ98608.ServiceOrder(
   pkServiceOrder BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   code VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   cost REAL NOT NULL,
   discount REAL NOT NULL DEFAULT 0,
   fee REAL NOT NULL DEFAULT 0,
   total REAL NOT NULL,
   primaryPayment INTEGER NOT NULL DEFAULT 1,
   status INTEGER NOT NULL DEFAULT 0,
   fkAppointment BIGINT NOT NULL,
   fkJuridicalPerson BIGINT NOT NULL,
   fkCurrency BIGINT NOT NULL,
   fkPerson BIGINT,
   fkAddress BIGINT,
   PRIMARY KEY(pkServiceOrder)
);

CREATE TABLE SVZ98608.UserPayment(
   pkUserPayment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL,
   date VARCHAR(26) NOT NULL,
   default BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL DEFAULT 0,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkUserPayment)
);

CREATE TABLE SVZ98608.ServiceOrderPayment(
   pkServiceOrderPayment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   number INTEGER NOT NULL,
   note VARCHAR(255),
   date VARCHAR(26) NOT NULL,
   value REAL NOT NULL,
   paymentType INTEGER NOT NULL DEFAULT 1,
   status INTEGER NOT NULL DEFAULT 0,
   fkServiceOrder BIGINT NOT NULL,
   fkPayment BIGINT,
   fkBalanceItem BIGINT,
   PRIMARY KEY(pkServiceOrderPayment)
);

CREATE TABLE SVZ98608.TaxReceipt(
   pkTaxReceipt BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   code VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   dateCanceled VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkUser BIGINT NOT NULL,
   fkEmail BIGINT NOT NULL,
   fkServiceOrder BIGINT NOT NULL,
   fkCity BIGINT NOT NULL,
   pkServiceOrderCanceled BIGINT,
   fkTaxReceiptCounterApproved BIGINT,
   PRIMARY KEY(pkTaxReceipt)
);

CREATE TABLE SVZ98608.Balance(
   pkBalance BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   value REAL NOT NULL,
   consolidatedValue REAL,
   consolidatedDate VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkCurrency BIGINT NOT NULL,
   fkJuridicalPerson BIGINT,
   fkPerson BIGINT,
   PRIMARY KEY(pkBalance)
);

CREATE TABLE SVZ98608.ServiceOrderTax(
   pkServiceOrderTax BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   note VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   value REAL NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkServiceOrder BIGINT NOT NULL,
   fkTaxFormula BIGINT NOT NULL,
   fkTaxSetting BIGINT NOT NULL,
   fkTaxReceipt BIGINT,
   PRIMARY KEY(pkServiceOrderTax)
);

CREATE TABLE SVZ98608.TaxSettings(
   pkTaxSettings BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   filedDate VARCHAR(26) NOT NULL,
   approvatedDate VARCHAR(26),
   expiredDate VARCHAR(26),
   observation VARCHAR(10000) NOT NULL,
   localType INTEGER NOT NULL DEFAULT 1,
   hasRevenue BOOLEAN NOT NULL DEFAULT false,
   transferTaxPeriod INTEGER NOT NULL DEFAULT 1,
   transferTaxDay INTEGER NOT NULL DEFAULT 1,
   status INTEGER NOT NULL DEFAULT 0,
   fkCity BIGINT NOT NULL,
   fkScreenApproval BIGINT NOT NULL,
   fkCityAccount BIGINT NOT NULL,
   fkCounter BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkTaxSettings)
);

CREATE TABLE SVZ98608.Attachment(
   pkAttachment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   type VARCHAR(255) NOT NULL,
   path VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   PRIMARY KEY(pkAttachment)
);

CREATE TABLE SVZ98608.TaxSettingAttachment(
   pkTaxSettingAttachment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkTaxSetting BIGINT NOT NULL,
   fkAttachment BIGINT NOT NULL,
   PRIMARY KEY(pkTaxSettingAttachment)
);

CREATE TABLE SVZ98608.UserAttachment(
   pkUserAttachment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   isProfilePicture BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL DEFAULT 0,
   fkAttachment BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   fkIdentificationDocument BIGINT,
   PRIMARY KEY(pkUserAttachment)
);

CREATE TABLE SVZ98608.TaxSettingsCategory(
   pkTaxSettingsCategory BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   tax REAL,
   localType INTEGER NOT NULL DEFAULT 1,
   freeTax BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL,
   fkTaxSettings BIGINT,
   fkCategory BIGINT,
   PRIMARY KEY(pkTaxSettingsCategory)
);

CREATE TABLE SVZ98608.ServiceTemplateContract(
   pkServiceTemplateContract BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   beginning VARCHAR(26) NOT NULL,
   end VARCHAR(26),
   status INTEGER NOT NULL,
   fkCategoryContractTemplate BIGINT NOT NULL,
   fkService BIGINT NOT NULL,
   fkTemplateAttachment BIGINT NOT NULL,
   fkSignatureAttachment BIGINT NOT NULL,
   PRIMARY KEY(pkServiceTemplateContract)
);

CREATE TABLE SVZ98608.UserSettings(
   pkUserSettings BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkUser BIGINT NOT NULL,
   fkSignatureAttachment BIGINT,
   PRIMARY KEY(pkUserSettings)
);

CREATE TABLE SVZ98608.Approval(
   pkApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   observation VARCHAR(10000) NOT NULL,
   date VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkUser BIGINT NOT NULL,
   fkScreenApproval BIGINT NOT NULL,
   PRIMARY KEY(pkApproval)
);

CREATE TABLE SVZ98608.Screen(
   pkScreen BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   id INTEGER NOT NULL,
   name VARCHAR(255) NOT NULL,
   path VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   PRIMARY KEY(pkScreen)
);

CREATE TABLE SVZ98608.ScreenPermission(
   pkPermissionPermission BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   permission INTEGER NOT NULL DEFAULT 1,
   status INTEGER NOT NULL DEFAULT 0,
   fkScreen BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkPermissionPermission)
);

CREATE TABLE SVZ98608.ScreenApproval(
   pkScreenApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   pathComplement VARCHAR(255),
   status INTEGER NOT NULL DEFAULT 0,
   fkScreen BIGINT NOT NULL,
   fkCountry SMALLINT,
   PRIMARY KEY(pkScreenApproval)
);

CREATE TABLE SVZ98608.PrepayTax(
   pkPrepayTax BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   value REAL NOT NULL,
   date VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkUser BIGINT NOT NULL,
   fkPayment BIGINT,
   fkBalanceItem BIGINT,
   PRIMARY KEY(pkPrepayTax)
);

CREATE TABLE SVZ98608.Payment(
   pkPayment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL DEFAULT 1,
   date VARCHAR(26) NOT NULL,
   value REAL NOT NULL,
   note VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCurrency BIGINT NOT NULL,
   fkBalanceItem BIGINT NOT NULL,
   fkMainBankAccount BIGINT NOT NULL,
   PRIMARY KEY(pkPayment)
);

CREATE TABLE SVZ98608.Bank(
   pkBank BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT,
   fkJuridicalPerson BIGINT,
   PRIMARY KEY(pkBank)
);

CREATE TABLE SVZ98608.PaymentDebt(
   pkPaymentDebt BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkPayment BIGINT NOT NULL,
   fkBankAccount BIGINT NOT NULL,
   PRIMARY KEY(pkPaymentDebt)
);

CREATE TABLE SVZ98608.PaymentBill(
   pkPaymentBill BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkPayment BIGINT NOT NULL,
   fkPerson BIGINT NOT NULL,
   PRIMARY KEY(pkPaymentBill)
);

CREATE TABLE SVZ98608.BankAccount(
   pkBankAccount BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   branch VARCHAR(255) NOT NULL,
   account VARCHAR(255) NOT NULL,
   validatedAccount DATE,
   status INTEGER NOT NULL DEFAULT 0,
   fkCurrency BIGINT NOT NULL,
   fkJuridicalPerson BIGINT,
   fkPerson BIGINT,
   fkBank BIGINT NOT NULL,
   fkBankBranch BIGINT,
   PRIMARY KEY(pkBankAccount)
);

CREATE TABLE SVZ98608.WithdrawMoney(
   pkWithdrawMoney BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   value REAL NOT NULL,
   date VARCHAR(26) NOT NULL,
   dateApprovated VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkTransferMoney BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   fkScreenApproval BIGINT,
   PRIMARY KEY(pkWithdrawMoney)
);

CREATE TABLE SVZ98608.Currency(
   pkCurrency BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   symbol VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL,
   fkCountry SMALLINT,
   PRIMARY KEY(pkCurrency)
);

CREATE TABLE SVZ98608.Language(
   pkLanguage SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT,
   PRIMARY KEY(pkLanguage)
);

CREATE TABLE SVZ98608.PaymentCredit(
   pkPaymentCredit BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   transactionId VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkPayment BIGINT NOT NULL,
   fkUserPaymentCreditCard BIGINT NOT NULL,
   PRIMARY KEY(pkPaymentCredit)
);

CREATE TABLE SVZ98608.PaymentDigitalWallet(
   pkPaymentDigitalWallet BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkPayment BIGINT,
   fkUserPaymentDigitalWallet BIGINT,
   PRIMARY KEY(pkPaymentDigitalWallet)
);

CREATE TABLE SVZ98608.DigitalWallet(
   pkDigitalWallet BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL,
   fkCountry SMALLINT,
   PRIMARY KEY(pkDigitalWallet)
);

CREATE TABLE SVZ98608.CreditCardBrand(
   pkCreditCardBrand BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL,
   fkCountry SMALLINT,
   PRIMARY KEY(pkCreditCardBrand)
);

CREATE TABLE SVZ98608.MainBankAccount(
   pkMainBankAccount BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkBalance BIGINT NOT NULL,
   fkBankAccount BIGINT NOT NULL,
   fkCountry SMALLINT NOT NULL,
   fkScreenApproval BIGINT NOT NULL,
   fkUserCreator BIGINT NOT NULL,
   PRIMARY KEY(pkMainBankAccount)
);

CREATE TABLE SVZ98608.TransferMoney(
   pkTransferMoney BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL,
   note VARCHAR(255) NOT NULL,
   value REAL NOT NULL,
   date VARCHAR(26) NOT NULL,
   identification VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkFromMainBankAccount BIGINT NOT NULL,
   fkToBankAccount BIGINT NOT NULL,
   fkCurrency BIGINT NOT NULL,
   fkBalanceItem BIGINT,
   PRIMARY KEY(pkTransferMoney)
);

CREATE TABLE SVZ98608.HelpCenterServicesTypes(
   pkHelpCenterServicesTypes BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   type INTEGER NOT NULL DEFAULT 1,
   status INTEGER NOT NULL DEFAULT 0,
   fkHelpCenterServicesTypes BIGINT,
   PRIMARY KEY(pkHelpCenterServicesTypes)
);

CREATE TABLE SVZ98608.HelpCenterMessages(
   pkHelpCenterMessages BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   message VARCHAR(10000) NOT NULL,
   date VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL,
   fkUser BIGINT NOT NULL,
   fkUserCompany BIGINT,
   fkHelpCenterAssistant BIGINT,
   PRIMARY KEY(pkHelpCenterMessages)
);

CREATE TABLE SVZ98608.HelpCenterAssistant(
   pkHelpCenterAssistant BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkJuridicalPerson BIGINT NOT NULL,
   PRIMARY KEY(pkHelpCenterAssistant)
);

CREATE TABLE SVZ98608.HelpCenter(
   pkHelpCenter BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   number INTEGER NOT NULL DEFAULT 1,
   protocol VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   message VARCHAR(10000) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkContactPhone BIGINT,
   fkContactEmail BIGINT,
   fkHelpCenterServicesTypes BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkHelpCenter)
);

CREATE TABLE SVZ98608.UserPaymentDigitalWallet(
   pkUserPaymentDigitalWallet BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   userCodeAccess VARCHAR(255) NOT NULL,
   datePairedUp VARCHAR(26) NOT NULL,
   fkDigitalWallet BIGINT NOT NULL,
   fkUserPayment BIGINT NOT NULL,
   PRIMARY KEY(pkUserPaymentDigitalWallet)
);

CREATE TABLE SVZ98608.UserPaymentCreditCard(
   pkUserPaymentCreditCard BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   cardNumber VARCHAR(255) NOT NULL,
   nameOnCard VARCHAR(255) NOT NULL,
   expirationDate DATE NOT NULL,
   pairingId VARCHAR(255),
   fkCreditCardBrand BIGINT NOT NULL,
   fkUserPayment BIGINT NOT NULL,
   fkBillingAddress BIGINT,
   pkShippingAddress BIGINT,
   PRIMARY KEY(pkUserPaymentCreditCard)
);

CREATE TABLE SVZ98608.ApprovalAttachment(
   pkApprovalAttachment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkApproval BIGINT NOT NULL,
   fkAttachment BIGINT NOT NULL,
   PRIMARY KEY(pkApprovalAttachment)
);

CREATE TABLE SVZ98608.HelpCenterTypicalAsks(
   pkHelpCenterTypicalAsks BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   number INTEGER,
   ask VARCHAR(255) NOT NULL,
   answer VARCHAR(10000) NOT NULL,
   fkHelpCenterTypicalAsks BIGINT,
   fkLanguage SMALLINT NOT NULL,
   PRIMARY KEY(pkHelpCenterTypicalAsks)
);

CREATE TABLE SVZ98608.HelpCenterService(
   pkHelpCenterService BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   date VARCHAR(26) NOT NULL,
   message VARCHAR(10000) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkHelpCenter BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   fkEmail BIGINT,
   fkSMS BIGINT,
   PRIMARY KEY(pkHelpCenterService)
);

CREATE TABLE SVZ98608.EmailController(
   pkEmailController BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL DEFAULT 1,
   imap VARCHAR(255) NOT NULL,
   smtp VARCHAR(255) NOT NULL,
   fullName VARCHAR(255) NOT NULL,
   email VARCHAR(255) NOT NULL,
   password VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT NOT NULL,
   PRIMARY KEY(pkEmailController)
);

CREATE TABLE SVZ98608.SMSController(
   pkSMSController INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL DEFAULT 1,
   number VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT NOT NULL,
   PRIMARY KEY(pkSMSController)
);

CREATE TABLE SVZ98608.Email(
   pkEmail BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   subject VARCHAR(255) NOT NULL,
   emailText VARCHAR(10000) NOT NULL,
   fkEmailController BIGINT,
   fkContact BIGINT,
   PRIMARY KEY(pkEmail)
);

CREATE TABLE SVZ98608.SMS(
   pkSMS BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   smsText VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkSMSController INTEGER,
   PRIMARY KEY(pkSMS)
);

CREATE TABLE SVZ98608.UserActivation(
   pkUserActivation BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL DEFAULT 1,
   code VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   dateActive VARCHAR(26),
   status INTEGER NOT NULL,
   fkUserLogin BIGINT NOT NULL,
   fkEmail BIGINT,
   fkSMS BIGINT,
   fkUserTwoStepsVerification BIGINT,
   PRIMARY KEY(pkUserActivation)
);

CREATE TABLE SVZ98608.UserLogin(
   pkUserLogin BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   dispositive VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   trust BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL DEFAULT 0,
   fkAddress BIGINT NOT NULL,
   fkUser BIGINT,
   PRIMARY KEY(pkUserLogin)
);

CREATE TABLE SVZ98608.UserTwoStepsVerification(
   pkUserTwoStepsVerification BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   dispositive VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   datePaired VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL,
   fkUser BIGINT,
   PRIMARY KEY(pkUserTwoStepsVerification)
);

CREATE TABLE SVZ98608.Log(
   pkLog BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL,
   title VARCHAR(255) NOT NULL,
   message VARCHAR(10000) NOT NULL,
   date VARCHAR(26) NOT NULL,
   fkCountry SMALLINT NOT NULL,
   PRIMARY KEY(pkLog)
);

CREATE TABLE SVZ98608.LogBackuped(
   pkLogBackuped BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   path VARCHAR(255) NOT NULL,
   date VARCHAR(26),
   beginning VARCHAR(26) NOT NULL,
   end VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkScreenApproval BIGINT NOT NULL,
   fkCountry SMALLINT NOT NULL,
   fkUser BIGINT,
   PRIMARY KEY(pkLogBackuped)
);

CREATE TABLE SVZ98608.CityAccount(
   pkCityAccount BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkCity BIGINT NOT NULL,
   fkBankAccount BIGINT NOT NULL,
   fkTax BIGINT NOT NULL,
   PRIMARY KEY(pkCityAccount)
);

CREATE TABLE SVZ98608.Counter(
   pkCounter BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   dateApproved DATE,
   status INTEGER NOT NULL DEFAULT 0,
   fkJuridicalPerson BIGINT NOT NULL,
   fkPerson BIGINT,
   PRIMARY KEY(pkCounter)
);

CREATE TABLE SVZ98608.TaxFormula(
   pkTaxFormula BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   number INTEGER NOT NULL,
   rate REAL,
   companyType INTEGER NOT NULL DEFAULT 1,
   status INTEGER NOT NULL DEFAULT 0,
   fkTax BIGINT NOT NULL,
   fkTaxSettings BIGINT,
   fkTaxFormula BIGINT,
   fkBankAccount BIGINT,
   fkTaxSettingsCategory BIGINT,
   PRIMARY KEY(pkTaxFormula)
);

CREATE TABLE SVZ98608.TaxSettingsCounter(
   pkTaxSettingsCounter BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   byPercent REAL,
   byOrderFixedPrice REAL,
   official BOOLEAN NOT NULL DEFAULT false,
   substituto BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL DEFAULT 0,
   fkTaxSettings BIGINT NOT NULL,
   fkCounter BIGINT NOT NULL,
   PRIMARY KEY(pkTaxSettingsCounter)
);

CREATE TABLE SVZ98608.LoanMoney(
   pkLoanMoney BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   date VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL,
   fkPerson BIGINT,
   fkJuridicalPerson BIGINT,
   fkLoanMoneyRequest BIGINT NOT NULL,
   fkPayment BIGINT,
   fkCurrency BIGINT,
   PRIMARY KEY(pkLoanMoney)
);

CREATE TABLE SVZ98608.LoanMoneyRequest(
   pkLoanMoneyRequest BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   value REAL NOT NULL,
   months INTEGER NOT NULL,
   date VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkJuridicalPerson BIGINT,
   fkPerson BIGINT,
   fkLoanBankProgram BIGINT NOT NULL,
   PRIMARY KEY(pkLoanMoneyRequest)
);

CREATE TABLE SVZ98608.PaymentTransfer(
   pkPaymentTransfer BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkPayment BIGINT,
   fkBankAccount BIGINT,
   PRIMARY KEY(pkPaymentTransfer)
);

CREATE TABLE SVZ98608.LoanBankProgram(
   pkLoanBankProgram BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   description VARCHAR(10000) NOT NULL,
   beginning VARCHAR(26) NOT NULL,
   end VARCHAR(26) NOT NULL,
   interestRate REAL NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkBank BIGINT NOT NULL,
   fkLoanBankProgramProfile BIGINT,
   fkScreenApproval BIGINT,
   PRIMARY KEY(pkLoanBankProgram)
);

CREATE TABLE SVZ98608.LoanBankProgramProfile(
   pkLoanBankProgramProfile BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   forCompany BOOLEAN NOT NULL DEFAULT false,
   minimumMonths INTEGER NOT NULL,
   maximumMonths INTEGER NOT NULL,
   minimumSpend REAL,
   minimumSpendSinceDate DATE,
   status INTEGER NOT NULL DEFAULT 0,
   PRIMARY KEY(pkLoanBankProgramProfile)
);

CREATE TABLE SVZ98608.LoanBankProgramProfileCategory(
   pkLoanBankProgramProfileCategory BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER,
   fkCategory BIGINT NOT NULL,
   fkLoanBankProgramProfile BIGINT NOT NULL,
   PRIMARY KEY(pkLoanBankProgramProfileCategory)
);

CREATE TABLE SVZ98608.BalanceBlocked(
   pkBalanceBlocked BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   note VARCHAR(255) NOT NULL,
   value REAL NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkLoanMoney BIGINT NOT NULL,
   fkBalance BIGINT NOT NULL,
   PRIMARY KEY(pkBalanceBlocked)
);

CREATE TABLE SVZ98608.BankBranch(
   pkBankBranch BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   branch VARCHAR(255) NOT NULL,
   fkBank BIGINT NOT NULL,
   fkJuridicalPerson BIGINT NOT NULL,
   PRIMARY KEY(pkBankBranch)
);

CREATE TABLE SVZ98608.LoanBankProgramProfileBranch(
   pkLoanBankProgramProfileBranch BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkLoanBankProgramProfile BIGINT,
   fkBankBranch BIGINT,
   PRIMARY KEY(pkLoanBankProgramProfileBranch)
);

CREATE TABLE SVZ98608.PaymentBalance(
   pkPaymentBalance BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkPayment BIGINT NOT NULL,
   PRIMARY KEY(pkPaymentBalance)
);

CREATE TABLE SVZ98608.ServiceOrderCanceled(
   pkServiceOrderCanceled BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   date VARCHAR(26),
   detail VARCHAR(10000) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   pkServiceOrder BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkServiceOrderCanceled)
);

CREATE TABLE SVZ98608.ServiceOrderRefund(
   pkServiceOrderRefund BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   value REAL NOT NULL,
   fee REAL NOT NULL,
   date VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkServiceOrderPayment BIGINT NOT NULL,
   fkServiceOrderCanceled BIGINT NOT NULL,
   fkRefound BIGINT,
   fkRefoundFee BIGINT,
   PRIMARY KEY(pkServiceOrderRefund)
);

CREATE TABLE SVZ98608.ServiceOrderAttachment(
   pkServiceOrderAttachment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkServiceOrder BIGINT NOT NULL,
   pkServiceContract BIGINT,
   fkUser BIGINT,
   fkAttachment BIGINT,
   PRIMARY KEY(pkServiceOrderAttachment)
);

CREATE TABLE SVZ98608.Refound(
   pkRefound BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkBalanceItem BIGINT NOT NULL,
   fkBalanceBlocked BIGINT,
   PRIMARY KEY(pkRefound)
);

CREATE TABLE SVZ98608.CategoryContractTemplate(
   pkCategoryContractTemplate BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   pkAttachment BIGINT,
   PRIMARY KEY(pkCategoryContractTemplate)
);

CREATE TABLE SVZ98608.FiscalModuleFunction(
   pkFiscalModuleFunction BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   code VARCHAR(255) NOT NULL,
   url VARCHAR(10000) NOT NULL,
   template VARCHAR(10000) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkFiscalModule BIGINT NOT NULL,
   PRIMARY KEY(pkFiscalModuleFunction)
);

CREATE TABLE SVZ98608.TaxReceiptFiscalModule(
   pkTaxReceiptFiscalModule BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   isSendingInGroup BOOLEAN NOT NULL DEFAULT false,
   dateSent VARCHAR(26),
   answeredRevenueItemCode VARCHAR(255),
   status INTEGER NOT NULL DEFAULT 0,
   fkFiscalModuleFunction BIGINT NOT NULL,
   fkTaxReceipt BIGINT NOT NULL,
   PRIMARY KEY(pkTaxReceiptFiscalModule)
);

CREATE TABLE SVZ98608.TaxReceiptCanceled(
   pkTaxReceiptCanceled BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   date VARCHAR(26),
   status INTEGER NOT NULL DEFAULT 0,
   fkTaxReceipt BIGINT NOT NULL,
   fkFiscalModuleFunction BIGINT NOT NULL,
   fkTaxReceiptFiscalModule BIGINT NOT NULL,
   PRIMARY KEY(pkTaxReceiptCanceled)
);

CREATE TABLE SVZ98608.IdentificationDocumentAttachment(
   pkIdentificationDocumentAttachment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkIdentificationDocument BIGINT,
   fkAttachment BIGINT,
   PRIMARY KEY(pkIdentificationDocumentAttachment)
);

CREATE TABLE SVZ98608.Tax(
   pkTax BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   name VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT,
   PRIMARY KEY(pkTax)
);

CREATE TABLE SVZ98608.TaxReceiptCounterApproved(
   pkTaxReceiptCounterApproved BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   date VARCHAR(26) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCounter BIGINT NOT NULL,
   fkAttachment BIGINT,
   PRIMARY KEY(pkTaxReceiptCounterApproved)
);

CREATE TABLE SVZ98608.DepartmentOfFinance(
   pkDepartmentOfFinance SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   region VARCHAR(255),
   status INTEGER NOT NULL,
   fkJuridicalPerson BIGINT NOT NULL,
   fkResponsable BIGINT NOT NULL,
   fkAddress BIGINT NOT NULL,
   fkState SMALLINT NOT NULL,
   PRIMARY KEY(pkDepartmentOfFinance)
);

CREATE TABLE SVZ98608.FiscalModule(
   pkFiscalModule BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   code VARCHAR(255) NOT NULL,
   url VARCHAR(10000) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkTaxSettings BIGINT NOT NULL,
   PRIMARY KEY(pkFiscalModule)
);

CREATE TABLE SVZ98608.FiscalModuleFunctionTag(
   pkFiscalModuleFunctionTag BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   sequence INTEGER NOT NULL DEFAULT 1,
   tag VARCHAR(255),
   value VARCHAR(10000),
   length INTEGER,
   completeWithZeroRight BOOLEAN NOT NULL DEFAULT false,
   completeWithZeroLeft BOOLEAN NOT NULL DEFAULT false,
   status INTEGER NOT NULL DEFAULT 0,
   fkTagReference BIGINT NOT NULL,
   fkFiscalModuleFunctionTag BIGINT,
   PRIMARY KEY(pkFiscalModuleFunctionTag)
);

CREATE TABLE SVZ98608.TagReference(
   pkTagReference BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   code VARCHAR(255) NOT NULL,
   name VARCHAR(255) NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkCountry SMALLINT,
   PRIMARY KEY(pkTagReference)
);

CREATE TABLE SVZ98608.LoanBankProgramContract(
   pkLoanBankProgramContract BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkTemplateContract BIGINT NOT NULL,
   fkLoanBankProgram BIGINT,
   PRIMARY KEY(pkLoanBankProgramContract)
);

CREATE TABLE SVZ98608.LoanBankProgramApproval(
   pkLoanBankProgramApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkApproval BIGINT,
   fkLoanBankProgram BIGINT,
   PRIMARY KEY(pkLoanBankProgramApproval)
);

CREATE TABLE SVZ98608.LogBackupedApproval(
   pkLogBackupedApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkLogBackuped BIGINT NOT NULL,
   fkApproval BIGINT NOT NULL,
   PRIMARY KEY(pkLogBackupedApproval)
);

CREATE TABLE SVZ98608.MainBankAccountApproval(
   pkMainBankAccountApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkMainBankAccount BIGINT NOT NULL,
   fkApproval BIGINT NOT NULL,
   PRIMARY KEY(pkMainBankAccountApproval)
);

CREATE TABLE SVZ98608.TaxReceiptCounterPayment(
   pkTaxReceiptCounterPayment BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkTaxReceiptCounterApproved BIGINT NOT NULL,
   fkTransferMoney BIGINT,
   fkTaxReceiptCounterFee BIGINT,
   PRIMARY KEY(pkTaxReceiptCounterPayment)
);

CREATE TABLE SVZ98608.TaxReceiptCounterFee(
   pkTaxReceiptCounterFee BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   pkTaxReceiptCounterApproved BIGINT NOT NULL,
   pkTaxSettingsCounter BIGINT NOT NULL,
   fkBalanceItem BIGINT NOT NULL,
   PRIMARY KEY(pkTaxReceiptCounterFee)
);

CREATE TABLE SVZ98608.BalanceItem(
   pkBalanceItem BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   note VARCHAR(255) NOT NULL,
   date VARCHAR(26) NOT NULL,
   value REAL NOT NULL,
   status INTEGER NOT NULL DEFAULT 0,
   fkBalance BIGINT,
   fkBalanceOrigin BIGINT,
   fkBalanceBlocked BIGINT,
   PRIMARY KEY(pkBalanceItem)
);

CREATE TABLE SVZ98608.WithdrawMoneyApproval(
   pkWithdrawMoneyApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkApproval BIGINT NOT NULL,
   fkWithdrawMoney BIGINT NOT NULL,
   PRIMARY KEY(pkWithdrawMoneyApproval)
);

CREATE TABLE SVZ98608.TaxSettingsApproval(
   pkTaxSettingsApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkTaxSettings BIGINT NOT NULL,
   fkApproval BIGINT NOT NULL,
   PRIMARY KEY(pkTaxSettingsApproval)
);

CREATE TABLE SVZ98608.FinancialModule(
   pkFinancialModule INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   date VARCHAR(26) NOT NULL,
   wallet VARCHAR(255),
   status INTEGER NOT NULL DEFAULT 0,
   fkMainBankAccount BIGINT NOT NULL,
   fkLogo BIGINT NOT NULL,
   fkScreenApproval BIGINT NOT NULL,
   fkUser BIGINT NOT NULL,
   PRIMARY KEY(pkFinancialModule)
);

CREATE TABLE SVZ98608.FinancialModuleFunction(
   pkFinancialModuleFunction BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   type INTEGER NOT NULL,
   name VARCHAR(255) NOT NULL,
   information VARCHAR(10000),
   status INTEGER NOT NULL DEFAULT 0,
   fkFinancialModule INTEGER NOT NULL,
   PRIMARY KEY(pkFinancialModuleFunction)
);

CREATE TABLE SVZ98608.FinanceModuleApproval(
   pkFinanceModuleApproval BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkFinancialModule INTEGER,
   fkApproval BIGINT,
   PRIMARY KEY(pkFinanceModuleApproval)
);

CREATE TABLE SVZ98608.Bill(
   pkBill BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   code VARCHAR(255) NOT NULL,
   number VARCHAR(255) NOT NULL,
   controlCode VARCHAR(255),
   type SMALLINT NOT NULL DEFAULT 1,
   issueDate DATE NOT NULL,
   dueDate DATE NOT NULL,
   expirationDate DATE NOT NULL,
   value REAL NOT NULL,
   discount REAL,
   interest REAL,
   fee REAL,
   total REAL,
   status INTEGER NOT NULL DEFAULT 0,
   fkPaymentBill BIGINT NOT NULL,
   fkBankAccount BIGINT NOT NULL,
   pkCurrency BIGINT NOT NULL,
   fkJuridicalPerson BIGINT,
   fkPerson BIGINT,
   fkAttachment BIGINT NOT NULL,
   fkBalanceItemFee BIGINT,
   PRIMARY KEY(pkBill)
);

CREATE TABLE SVZ98608.BillFinancialModuleFunction(
   pkBillFinancialModuleFunction INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status SMALLINT NOT NULL DEFAULT 0,
   fkBill BIGINT NOT NULL,
   fkFinancialModuleFunction BIGINT NOT NULL,
   fkAttachment BIGINT,
   PRIMARY KEY(pkBillFinancialModuleFunction)
);

CREATE TABLE SVZ98608.UserPaymentBankAccount(
   pkUserPaymentBankAccount BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   fkUserPayment BIGINT NOT NULL,
   fkBankAccount BIGINT NOT NULL,
   PRIMARY KEY(pkUserPaymentBankAccount)
);

CREATE TABLE SVZ98608.CreditCardFinancialModuleFunction(
   pkCreditCardFinancialModuleFunction INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status SMALLINT NOT NULL DEFAULT 0,
   fkFinancialModuleFunction BIGINT,
   fkPaymentCredit BIGINT,
   PRIMARY KEY(pkCreditCardFinancialModuleFunction)
);

CREATE TABLE SVZ98608.FinancialModuleTermsOfService(
   pkFinancialModuleTermsOfService INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status SMALLINT NOT NULL DEFAULT 0,
   fkFinancialModule INTEGER NOT NULL,
   fkAttachment BIGINT NOT NULL,
   PRIMARY KEY(pkFinancialModuleTermsOfService)
);

CREATE TABLE SVZ98608.ServiceImage(
   pkServiceImage BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   status INTEGER NOT NULL DEFAULT 0,
   fkAttachment BIGINT NOT NULL,
   fkService BIGINT NOT NULL,
   PRIMARY KEY(pkServiceImage)
);

-------------------------------CREATE TABLE-------------------------------

-------------------------------FOREIGN KEY--------------------------------
ALTER TABLE SVZ98608.Person
   FOREIGN KEY (fkBirthCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.JuridicalPerson
   FOREIGN KEY (fkOriginCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.IdentificationDocument
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.IdentificationDocument
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.IdentificationDocument
   FOREIGN KEY (fkState)
       REFERENCES State (pkState)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.IdentificationDocument
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.User
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.User
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.User
   FOREIGN KEY (fkEmployee)
       REFERENCES Employee (pkEmployee)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.User
   FOREIGN KEY (fkCounter)
       REFERENCES Counter (pkCounter)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.User
   FOREIGN KEY (fkBalance)
       REFERENCES Balance (pkBalance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Contact
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Contact
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Address
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Address
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Address
   FOREIGN KEY (fkCity)
       REFERENCES City (pkCity)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.State
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Country
   FOREIGN KEY (fkLanguage)
       REFERENCES Language (pkLanguage)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.City
   FOREIGN KEY (fkState)
       REFERENCES State (pkState)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.City
   FOREIGN KEY (fkDepartmentOfFinance)
       REFERENCES DepartmentOfFinance (pkDepartmentOfFinance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.City
   FOREIGN KEY (fkBalance)
       REFERENCES Balance (pkBalance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Employee
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Employee
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.EmployeeResponsibility
   FOREIGN KEY (fkEmployee)
       REFERENCES Employee (pkEmployee)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Appointment
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Service
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Service
   FOREIGN KEY (fkServiceCategory)
       REFERENCES ServiceCategory (pkServiceCategory)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Service
   FOREIGN KEY (fkEmployeeResponsibility)
       REFERENCES EmployeeResponsibility (pkEmployeeResponsibility)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Service
   FOREIGN KEY (fkAddress)
       REFERENCES Address (pkAddress)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Service
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceAppointment
   FOREIGN KEY (fkService)
       REFERENCES Service (pkService)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceAppointment
   FOREIGN KEY (fkAppointment)
       REFERENCES Appointment (pkAppointment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceCategory
   FOREIGN KEY (fkCategory)
       REFERENCES Category (pkCategory)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Category
   FOREIGN KEY (fkCategory)
       REFERENCES Category (pkCategory)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Category
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceUnavailable
   FOREIGN KEY (fkService)
       REFERENCES Service (pkService)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrder
   FOREIGN KEY (fkAppointment)
       REFERENCES Appointment (pkAppointment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrder
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrder
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrder
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrder
   FOREIGN KEY (fkAddress)
       REFERENCES Address (pkAddress)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPayment
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderPayment
   FOREIGN KEY (fkServiceOrder)
       REFERENCES ServiceOrder (pkServiceOrder)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderPayment
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderPayment
   FOREIGN KEY (fkBalanceItem)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceipt
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceipt
   FOREIGN KEY (fkEmail)
       REFERENCES Email (pkEmail)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceipt
   FOREIGN KEY (fkServiceOrder)
       REFERENCES ServiceOrder (pkServiceOrder)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceipt
   FOREIGN KEY (fkCity)
       REFERENCES City (pkCity)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceipt
   FOREIGN KEY (pkServiceOrderCanceled)
       REFERENCES ServiceOrderCanceled (pkServiceOrderCanceled)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceipt
   FOREIGN KEY (fkTaxReceiptCounterApproved)
       REFERENCES TaxReceiptCounterApproved (pkTaxReceiptCounterApproved)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Balance
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Balance
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Balance
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderTax
   FOREIGN KEY (fkServiceOrder)
       REFERENCES ServiceOrder (pkServiceOrder)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderTax
   FOREIGN KEY (fkTaxFormula)
       REFERENCES TaxFormula (pkTaxFormula)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderTax
   FOREIGN KEY (fkTaxSetting)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderTax
   FOREIGN KEY (fkTaxReceipt)
       REFERENCES TaxReceipt (pkTaxReceipt)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettings
   FOREIGN KEY (fkCity)
       REFERENCES City (pkCity)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettings
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettings
   FOREIGN KEY (fkCityAccount)
       REFERENCES CityAccount (pkCityAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettings
   FOREIGN KEY (fkCounter)
       REFERENCES Counter (pkCounter)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettings
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingAttachment
   FOREIGN KEY (fkTaxSetting)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingAttachment
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserAttachment
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserAttachment
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserAttachment
   FOREIGN KEY (fkIdentificationDocument)
       REFERENCES IdentificationDocument (pkIdentificationDocument)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingsCategory
   FOREIGN KEY (fkTaxSettings)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingsCategory
   FOREIGN KEY (fkCategory)
       REFERENCES Category (pkCategory)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceTemplateContract
   FOREIGN KEY (fkCategoryContractTemplate)
       REFERENCES CategoryContractTemplate (pkCategoryContractTemplate)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceTemplateContract
   FOREIGN KEY (fkService)
       REFERENCES Service (pkService)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceTemplateContract
   FOREIGN KEY (fkTemplateAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceTemplateContract
   FOREIGN KEY (fkSignatureAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserSettings
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserSettings
   FOREIGN KEY (fkSignatureAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Approval
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Approval
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ScreenPermission
   FOREIGN KEY (fkScreen)
       REFERENCES Screen (pkScreen)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ScreenPermission
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ScreenApproval
   FOREIGN KEY (fkScreen)
       REFERENCES Screen (pkScreen)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ScreenApproval
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PrepayTax
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PrepayTax
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PrepayTax
   FOREIGN KEY (fkBalanceItem)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Payment
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Payment
   FOREIGN KEY (fkBalanceItem)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Payment
   FOREIGN KEY (fkMainBankAccount)
       REFERENCES MainBankAccount (pkMainBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bank
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bank
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentDebt
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentDebt
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentBill
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentBill
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankAccount
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankAccount
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankAccount
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankAccount
   FOREIGN KEY (fkBank)
       REFERENCES Bank (pkBank)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankAccount
   FOREIGN KEY (fkBankBranch)
       REFERENCES BankBranch (pkBankBranch)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.WithdrawMoney
   FOREIGN KEY (fkTransferMoney)
       REFERENCES TransferMoney (pkTransferMoney)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.WithdrawMoney
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.WithdrawMoney
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Currency
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Language
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentCredit
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentCredit
   FOREIGN KEY (fkUserPaymentCreditCard)
       REFERENCES UserPaymentCreditCard (pkUserPaymentCreditCard)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentDigitalWallet
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentDigitalWallet
   FOREIGN KEY (fkUserPaymentDigitalWallet)
       REFERENCES UserPaymentDigitalWallet (pkUserPaymentDigitalWallet)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.DigitalWallet
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CreditCardBrand
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccount
   FOREIGN KEY (fkBalance)
       REFERENCES Balance (pkBalance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccount
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccount
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccount
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccount
   FOREIGN KEY (fkUserCreator)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TransferMoney
   FOREIGN KEY (fkFromMainBankAccount)
       REFERENCES MainBankAccount (pkMainBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TransferMoney
   FOREIGN KEY (fkToBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TransferMoney
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TransferMoney
   FOREIGN KEY (fkBalanceItem)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterServicesTypes
   FOREIGN KEY (fkHelpCenterServicesTypes)
       REFERENCES HelpCenterServicesTypes (pkHelpCenterServicesTypes)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterMessages
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterMessages
   FOREIGN KEY (fkUserCompany)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterMessages
   FOREIGN KEY (fkHelpCenterAssistant)
       REFERENCES HelpCenterAssistant (pkHelpCenterAssistant)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterAssistant
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenter
   FOREIGN KEY (fkContactPhone)
       REFERENCES Contact (pkContact)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenter
   FOREIGN KEY (fkContactEmail)
       REFERENCES Contact (pkContact)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenter
   FOREIGN KEY (fkHelpCenterServicesTypes)
       REFERENCES HelpCenterServicesTypes (pkHelpCenterServicesTypes)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenter
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentDigitalWallet
   FOREIGN KEY (fkDigitalWallet)
       REFERENCES DigitalWallet (pkDigitalWallet)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentDigitalWallet
   FOREIGN KEY (fkUserPayment)
       REFERENCES UserPayment (pkUserPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentCreditCard
   FOREIGN KEY (fkCreditCardBrand)
       REFERENCES CreditCardBrand (pkCreditCardBrand)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentCreditCard
   FOREIGN KEY (fkUserPayment)
       REFERENCES UserPayment (pkUserPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentCreditCard
   FOREIGN KEY (fkBillingAddress)
       REFERENCES Address (pkAddress)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentCreditCard
   FOREIGN KEY (pkShippingAddress)
       REFERENCES Address (pkAddress)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ApprovalAttachment
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ApprovalAttachment
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterTypicalAsks
   FOREIGN KEY (fkHelpCenterTypicalAsks)
       REFERENCES HelpCenterTypicalAsks (pkHelpCenterTypicalAsks)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterTypicalAsks
   FOREIGN KEY (fkLanguage)
       REFERENCES Language (pkLanguage)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterService
   FOREIGN KEY (fkHelpCenter)
       REFERENCES HelpCenter (pkHelpCenter)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterService
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterService
   FOREIGN KEY (fkEmail)
       REFERENCES Email (pkEmail)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.HelpCenterService
   FOREIGN KEY (fkSMS)
       REFERENCES SMS (pkSMS)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.EmailController
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.SMSController
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Email
   FOREIGN KEY (fkEmailController)
       REFERENCES EmailController (pkEmailController)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Email
   FOREIGN KEY (fkContact)
       REFERENCES Contact (pkContact)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.SMS
   FOREIGN KEY (fkSMSController)
       REFERENCES SMSController (pkSMSController)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserActivation
   FOREIGN KEY (fkUserLogin)
       REFERENCES UserLogin (pkUserLogin)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserActivation
   FOREIGN KEY (fkEmail)
       REFERENCES Email (pkEmail)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserActivation
   FOREIGN KEY (fkSMS)
       REFERENCES SMS (pkSMS)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserActivation
   FOREIGN KEY (fkUserTwoStepsVerification)
       REFERENCES UserTwoStepsVerification (pkUserTwoStepsVerification)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserLogin
   FOREIGN KEY (fkAddress)
       REFERENCES Address (pkAddress)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserLogin
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserTwoStepsVerification
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Log
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LogBackuped
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LogBackuped
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LogBackuped
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CityAccount
   FOREIGN KEY (fkCity)
       REFERENCES City (pkCity)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CityAccount
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CityAccount
   FOREIGN KEY (fkTax)
       REFERENCES Tax (pkTax)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Counter
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Counter
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxFormula
   FOREIGN KEY (fkTax)
       REFERENCES Tax (pkTax)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxFormula
   FOREIGN KEY (fkTaxSettings)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxFormula
   FOREIGN KEY (fkTaxFormula)
       REFERENCES TaxFormula (pkTaxFormula)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxFormula
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxFormula
   FOREIGN KEY (fkTaxSettingsCategory)
       REFERENCES TaxSettingsCategory (pkTaxSettingsCategory)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingsCounter
   FOREIGN KEY (fkTaxSettings)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingsCounter
   FOREIGN KEY (fkCounter)
       REFERENCES Counter (pkCounter)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoney
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoney
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoney
   FOREIGN KEY (fkLoanMoneyRequest)
       REFERENCES LoanMoneyRequest (pkLoanMoneyRequest)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoney
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoney
   FOREIGN KEY (fkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoneyRequest
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoneyRequest
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanMoneyRequest
   FOREIGN KEY (fkLoanBankProgram)
       REFERENCES LoanBankProgram (pkLoanBankProgram)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentTransfer
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentTransfer
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgram
   FOREIGN KEY (fkBank)
       REFERENCES Bank (pkBank)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgram
   FOREIGN KEY (fkLoanBankProgramProfile)
       REFERENCES LoanBankProgramProfile (pkLoanBankProgramProfile)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgram
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramProfileCategory
   FOREIGN KEY (fkCategory)
       REFERENCES Category (pkCategory)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramProfileCategory
   FOREIGN KEY (fkLoanBankProgramProfile)
       REFERENCES LoanBankProgramProfile (pkLoanBankProgramProfile)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BalanceBlocked
   FOREIGN KEY (fkLoanMoney)
       REFERENCES LoanMoney (pkLoanMoney)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BalanceBlocked
   FOREIGN KEY (fkBalance)
       REFERENCES Balance (pkBalance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankBranch
   FOREIGN KEY (fkBank)
       REFERENCES Bank (pkBank)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BankBranch
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramProfileBranch
   FOREIGN KEY (fkLoanBankProgramProfile)
       REFERENCES LoanBankProgramProfile (pkLoanBankProgramProfile)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramProfileBranch
   FOREIGN KEY (fkBankBranch)
       REFERENCES BankBranch (pkBankBranch)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.PaymentBalance
   FOREIGN KEY (fkPayment)
       REFERENCES Payment (pkPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderCanceled
   FOREIGN KEY (pkServiceOrder)
       REFERENCES ServiceOrder (pkServiceOrder)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderCanceled
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderRefund
   FOREIGN KEY (fkServiceOrderPayment)
       REFERENCES ServiceOrderPayment (pkServiceOrderPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderRefund
   FOREIGN KEY (fkServiceOrderCanceled)
       REFERENCES ServiceOrderCanceled (pkServiceOrderCanceled)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderRefund
   FOREIGN KEY (fkRefound)
       REFERENCES Refound (pkRefound)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderRefund
   FOREIGN KEY (fkRefoundFee)
       REFERENCES Refound (pkRefound)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderAttachment
   FOREIGN KEY (fkServiceOrder)
       REFERENCES ServiceOrder (pkServiceOrder)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderAttachment
   FOREIGN KEY (pkServiceContract)
       REFERENCES ServiceTemplateContract (pkServiceTemplateContract)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderAttachment
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceOrderAttachment
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Refound
   FOREIGN KEY (fkBalanceItem)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Refound
   FOREIGN KEY (fkBalanceBlocked)
       REFERENCES BalanceBlocked (pkBalanceBlocked)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CategoryContractTemplate
   FOREIGN KEY (pkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FiscalModuleFunction
   FOREIGN KEY (fkFiscalModule)
       REFERENCES FiscalModule (pkFiscalModule)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptFiscalModule
   FOREIGN KEY (fkFiscalModuleFunction)
       REFERENCES FiscalModuleFunction (pkFiscalModuleFunction)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptFiscalModule
   FOREIGN KEY (fkTaxReceipt)
       REFERENCES TaxReceipt (pkTaxReceipt)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCanceled
   FOREIGN KEY (fkTaxReceipt)
       REFERENCES TaxReceipt (pkTaxReceipt)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCanceled
   FOREIGN KEY (fkFiscalModuleFunction)
       REFERENCES FiscalModuleFunction (pkFiscalModuleFunction)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCanceled
   FOREIGN KEY (fkTaxReceiptFiscalModule)
       REFERENCES TaxReceiptFiscalModule (pkTaxReceiptFiscalModule)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.IdentificationDocumentAttachment
   FOREIGN KEY (fkIdentificationDocument)
       REFERENCES IdentificationDocument (pkIdentificationDocument)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.IdentificationDocumentAttachment
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Tax
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterApproved
   FOREIGN KEY (fkCounter)
       REFERENCES Counter (pkCounter)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterApproved
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.DepartmentOfFinance
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.DepartmentOfFinance
   FOREIGN KEY (fkResponsable)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.DepartmentOfFinance
   FOREIGN KEY (fkAddress)
       REFERENCES Address (pkAddress)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.DepartmentOfFinance
   FOREIGN KEY (fkState)
       REFERENCES State (pkState)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FiscalModule
   FOREIGN KEY (fkTaxSettings)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FiscalModuleFunctionTag
   FOREIGN KEY (fkTagReference)
       REFERENCES TagReference (pkTagReference)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FiscalModuleFunctionTag
   FOREIGN KEY (fkFiscalModuleFunctionTag)
       REFERENCES FiscalModuleFunctionTag (pkFiscalModuleFunctionTag)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TagReference
   FOREIGN KEY (fkCountry)
       REFERENCES Country (pkCountry)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramContract
   FOREIGN KEY (fkTemplateContract)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramContract
   FOREIGN KEY (fkLoanBankProgram)
       REFERENCES LoanBankProgram (pkLoanBankProgram)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramApproval
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LoanBankProgramApproval
   FOREIGN KEY (fkLoanBankProgram)
       REFERENCES LoanBankProgram (pkLoanBankProgram)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LogBackupedApproval
   FOREIGN KEY (fkLogBackuped)
       REFERENCES LogBackuped (pkLogBackuped)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.LogBackupedApproval
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccountApproval
   FOREIGN KEY (fkMainBankAccount)
       REFERENCES MainBankAccount (pkMainBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.MainBankAccountApproval
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterPayment
   FOREIGN KEY (fkTaxReceiptCounterApproved)
       REFERENCES TaxReceiptCounterApproved (pkTaxReceiptCounterApproved)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterPayment
   FOREIGN KEY (fkTransferMoney)
       REFERENCES TransferMoney (pkTransferMoney)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterPayment
   FOREIGN KEY (fkTaxReceiptCounterFee)
       REFERENCES TaxReceiptCounterFee (pkTaxReceiptCounterFee)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterFee
   FOREIGN KEY (pkTaxReceiptCounterApproved)
       REFERENCES TaxReceiptCounterApproved (pkTaxReceiptCounterApproved)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterFee
   FOREIGN KEY (pkTaxSettingsCounter)
       REFERENCES TaxSettingsCounter (pkTaxSettingsCounter)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxReceiptCounterFee
   FOREIGN KEY (fkBalanceItem)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BalanceItem
   FOREIGN KEY (fkBalance)
       REFERENCES Balance (pkBalance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BalanceItem
   FOREIGN KEY (fkBalanceOrigin)
       REFERENCES Balance (pkBalance)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BalanceItem
   FOREIGN KEY (fkBalanceBlocked)
       REFERENCES BalanceBlocked (pkBalanceBlocked)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.WithdrawMoneyApproval
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.WithdrawMoneyApproval
   FOREIGN KEY (fkWithdrawMoney)
       REFERENCES WithdrawMoney (pkWithdrawMoney)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingsApproval
   FOREIGN KEY (fkTaxSettings)
       REFERENCES TaxSettings (pkTaxSettings)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.TaxSettingsApproval
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModule
   FOREIGN KEY (fkMainBankAccount)
       REFERENCES MainBankAccount (pkMainBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModule
   FOREIGN KEY (fkLogo)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModule
   FOREIGN KEY (fkScreenApproval)
       REFERENCES ScreenApproval (pkScreenApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModule
   FOREIGN KEY (fkUser)
       REFERENCES User (pkUser)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModuleFunction
   FOREIGN KEY (fkFinancialModule)
       REFERENCES FinancialModule (pkFinancialModule)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinanceModuleApproval
   FOREIGN KEY (fkFinancialModule)
       REFERENCES FinancialModule (pkFinancialModule)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinanceModuleApproval
   FOREIGN KEY (fkApproval)
       REFERENCES Approval (pkApproval)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (fkPaymentBill)
       REFERENCES PaymentBill (pkPaymentBill)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (pkCurrency)
       REFERENCES Currency (pkCurrency)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (fkJuridicalPerson)
       REFERENCES JuridicalPerson (pkJuridicalPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (fkPerson)
       REFERENCES Person (pkPerson)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.Bill
   FOREIGN KEY (fkBalanceItemFee)
       REFERENCES BalanceItem (pkBalanceItem)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BillFinancialModuleFunction
   FOREIGN KEY (fkBill)
       REFERENCES Bill (pkBill)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BillFinancialModuleFunction
   FOREIGN KEY (fkFinancialModuleFunction)
       REFERENCES FinancialModuleFunction (pkFinancialModuleFunction)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.BillFinancialModuleFunction
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentBankAccount
   FOREIGN KEY (fkUserPayment)
       REFERENCES UserPayment (pkUserPayment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.UserPaymentBankAccount
   FOREIGN KEY (fkBankAccount)
       REFERENCES BankAccount (pkBankAccount)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CreditCardFinancialModuleFunction
   FOREIGN KEY (fkFinancialModuleFunction)
       REFERENCES FinancialModuleFunction (pkFinancialModuleFunction)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.CreditCardFinancialModuleFunction
   FOREIGN KEY (fkPaymentCredit)
       REFERENCES PaymentCredit (pkPaymentCredit)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModuleTermsOfService
   FOREIGN KEY (fkFinancialModule)
       REFERENCES FinancialModule (pkFinancialModule)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.FinancialModuleTermsOfService
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceImage
   FOREIGN KEY (fkAttachment)
       REFERENCES Attachment (pkAttachment)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

ALTER TABLE SVZ98608.ServiceImage
   FOREIGN KEY (fkService)
       REFERENCES Service (pkService)
           ON UPDATE RESTRICT
           ON DELETE CASCADE;

-------------------------------FOREIGN KEY--------------------------------

